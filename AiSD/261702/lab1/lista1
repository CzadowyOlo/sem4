{"version": 2, "width": 143, "height": 110, "timestamp": 1647298818, "env": {"SHELL": "/bin/bash", "TERM": "xterm-256color"}}
[0.035702, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[1.26501, "o", "l"]
[1.518713, "o", "s"]
[1.912157, "o", "\r\n"]
[1.914542, "o", "exercise1_2.c  exercise1.c  exercise2.c  exercise3.c  lista1\r\n"]
[1.914932, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[4.301959, "o", "ls"]
[4.56619, "o", "\b\bexit"]
[4.816041, "o", "\b\b\b\bq\u001b[K"]
[5.078963, "o", "\bcat exercise1.c | less"]
[5.402501, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bls\u001b[K"]
[5.975253, "o", "\b\bcat exercise1.c | less"]
[7.394231, "o", "\r\n"]
[7.396913, "o", "\u001b[?1049h\u001b[22;0;0t\u001b[?1h\u001b=\r"]
[7.397196, "o", "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <time.h>\r\n\r\ntypedef struct Item Element;\r\ntypedef struct FIFO Kolejka;\r\n\r\nstruct Item{\r\n    int value;\r\n    Element* next;\r\n};\r\n\r\nstruct FIFO{\r\n    Element* head; //head to zmienna adresowa, ktora przechowuje adres pewnej zmiennej typu Element\r\n    Element* tail;\r\n    int size;\r\n};\r\nKolejka* createFIfo(){\r\n    Kolejka* kolejka = malloc(sizeof(Kolejka));\r\n    kolejka->head = NULL;\r\n    kolejka->tail = NULL;\r\n    kolejka->size = 0;\r\n    return kolejka;\r\n}\r\n\r\nbool isFull (Kolejka* kolejka){\r\n    if(kolejka -> size != 0){\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nvoid startFifo(Kolejka* kolejka, int value){\r\n"]
[7.397362, "o", "    Element* element = malloc(sizeof(Element));\r\n    element -> value = value;\r\n    element -> next = NULL;\r\n    kolejka -> head = element;\r\n    kolejka -> tail = element;\r\n    kolejka -> size = 1;\r\n\r\n}\r\n\r\nvoid addElement (Kolejka* kolejka, int value){\r\n\r\n    if(isFull(kolejka)){\r\n        Element* element = malloc(sizeof(Element));\r\n        element -> "]
[7.397536, "o", "value = value;\r\n        element -> next = NULL;\r\n\r\n        kolejka -> tail -> next = element;\r\n        kolejka -> tail = element;\r\n        kolejka -> size++;\r\n\r\n    }\r\n\r\n    else{\r\n        startFifo(kolejka, value);\r\n    }\r\n\r\n    printf(\"Dodano element: %d \\n\", value);\r\n}\r\n\r\nvoid removeElement(Kolejka* kolejka){\r\n    if(isFull(kolejka)){\r\n        Element* temporary = kolejka -> head -> next;\r\n        printf(\"usuniento element: %d \\n\", kolejka -> head -> value);\r\n"]
[7.397698, "o", "        free(kolejka -> head);\r\n        kolejka -> head = temporary;\r\n        kolejka -> size--;\r\n    }\r\n    else{\r\n        printf(\"kolejka juz pusta \\n\");\r\n    }\r\n    \r\n}\r\n\r\nvoid displayFifo (Kolejka* kolejka){\r\n    if(isFull(kolejka)){\r\n        Element* temporary;\r\n        temporary = kolejka -> head;\r\n        while (temporary != NULL){\r\n            printf(\"%d -> \", temporary -> value);\r\n            temporary = temporary -> next;\r\n        }\r\n        printf(\"NULL \\n\");\r\n    }    \r\n    else{\r\n        printf(\"kolejka juz pusta \\n\");\r\n    }    \r\n}\r\n\r\nint main(){\r\n    Kolejka* kolejka = createFIfo("]
[7.397808, "o", ");\r\n    /*\r\n    addElement (kolejka, 1);\r\n    addElement (kolejka, 2);\r\n    addElement (kolejka, 3);\r\n    addElement (kolejka, 4);\r\n    displayFifo(kolejka);\r\n    removeElement(kolejka);\r\n    displayFifo(kolejka);\r\n    removeElement(kolejka);\r\n    displayFifo(kolejka);\r\n    removeElement(kolejka);\r\n    displayFifo(kolejka);\r\n    removeElement(kolejka);\r\n:\u001b[K"]
[9.341045, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[9.341304, "o", "    displayFifo(kolejka);\r\n:\u001b[K"]
[9.549734, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[9.549892, "o", "    removeElement(kolejka);\r\n:\u001b[K"]
[9.729378, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[9.729587, "o", "    addElement(kolejka, 5);\r\n:\u001b[K"]
[9.923586, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    displayFifo(kolejka);\r\n:\u001b[K"]
[10.423656, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.423809, "o", "    */\r\n:\u001b[K"]
[10.45475, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.455032, "o", "\r\n:\u001b[K"]
[10.48526, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    int i = 0;\r\n:\u001b[K"]
[10.515417, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    int r;\r\n:\u001b[K"]
[10.547926, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    srand(time(NULL));\r\n:\u001b[K"]
[10.577904, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    while (i < 100){\r\n:\u001b[K"]
[10.608794, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[10.639805, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.639926, "o", "        r = rand() % 200;\r\n:\u001b[K"]
[10.669817, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.670054, "o", "        addElement(kolejka, r);\r\n:\u001b[K"]
[10.699555, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.699754, "o", "        i++;\r\n:\u001b[K"]
[10.729709, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    }\r\n:\u001b[K"]
[10.759852, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.760051, "o", "    displayFifo(kolejka);\r\n:\u001b[K"]
[10.79019, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.790336, "o", "    i = 0;\r\n:\u001b[K"]
[10.820021, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.820241, "o", "    while (i < 101){\r\n:\u001b[K"]
[10.850304, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.850478, "o", "\r\n:\u001b[K"]
[10.883526, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[10.913759, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        removeElement(kolejka);\r\n:\u001b[K"]
[10.94387, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        i++;\r\n:\u001b[K"]
[10.974178, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[10.974372, "o", "    }\r\n:\u001b[K"]
[11.004426, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.004619, "o", "    displayFifo(kolejka);\r\n:\u001b[K"]
[11.035314, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.035587, "o", "\r\n:\u001b[K"]
[11.065445, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[11.097032, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.097282, "o", "}\r\n:\u001b[K"]
[11.12647, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.126693, "o", "\r\n:\u001b[K"]
[11.156911, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.157046, "o", "\r\n:\u001b[K"]
[11.189045, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[11.219342, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.219484, "o", "\r\n:\u001b[K"]
[11.250403, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[11.280656, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.280852, "o", "\r\n:\u001b[K"]
[11.315243, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.315413, "o", "\r\n:\u001b[K"]
[11.34649, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.346724, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[11.377395, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[11.377592, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[11.641582, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[13.538098, "o", "\r\u001b[K\u001b[?1l\u001b>\u001b[?1049l\u001b[23;0;0t"]
[13.538834, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[16.530612, "o", "."]
[16.760695, "o", "/"]
[17.282341, "o", "e"]
[18.263232, "o", "c"]
[19.468236, "o", "\b\u001b[K"]
[19.692067, "o", "x"]
[19.941021, "o", "e"]
[20.205128, "o", "r"]
[20.543656, "o", "c"]
[20.743698, "o", "i"]
[20.92235, "o", "s"]
[21.192144, "o", "e"]
[21.952831, "o", "1"]
[26.543105, "o", "."]
[26.876767, "o", "c"]
[27.618551, "o", "\r\n"]
[27.619711, "o", "bash: ./exercise1.c: Brak dostÄ™pu\r\n"]
[27.620323, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[35.246372, "o", "g"]
[35.470785, "o", "c"]
[35.665617, "o", "c"]
[36.427505, "o", " "]
[36.711231, "o", "e"]
[37.038772, "o", "x"]
[37.31303, "o", "e"]
[37.567203, "o", "r"]
[37.901148, "o", "c"]
[38.059602, "o", "i"]
[38.263699, "o", "s"]
[38.532914, "o", "e"]
[41.4154, "o", "1"]
[42.281947, "o", "."]
[42.646544, "o", "c"]
[43.053769, "o", " "]
[43.591305, "o", "-"]
[43.875119, "o", "o"]
[44.119733, "o", " "]
[44.413287, "o", "e"]
[44.801406, "o", "x"]
[45.93672, "o", "1"]
[47.813522, "o", "\r\n"]
[47.878478, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[49.377194, "o", "gcc exercise1.c -o ex1"]
[49.750747, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\u001b[9P./exercise1.c"]
[51.045416, "o", "\b\u001b[K"]
[51.383526, "o", "\b\u001b[K"]
[52.549065, "o", "\r\n"]
[52.55037, "o", "bash: ./exercise1: Nie ma takiego pliku ani katalogu\r\n"]
[52.55121, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[56.716047, "o", "./exercise1"]
[57.628824, "o", "\b\u001b[K"]
[58.129097, "o", "\b\u001b[K"]
[58.159328, "o", "\b\u001b[K"]
[58.189571, "o", "\b\u001b[K"]
[58.219704, "o", "\b\u001b[K"]
[58.250061, "o", "\b\u001b[K"]
[58.283759, "o", "\b\u001b[K"]
[58.468816, "o", "\b\u001b[K"]
[59.554837, "o", "x"]
[60.037065, "o", "1"]
[60.649173, "o", "\r\n"]
[60.650765, "o", "Dodano element: 120 \r\nDodano element: 159 \r\nDodano element: 162 \r\nDodano element: 172 \r\nDodano element: 47 \r\nDodano element: 62 \r\nDodano element: 7 \r\nDodano element: 26 \r\nDodano element: 141 \r\nDodano element: 15 \r\nDodano element: 56 \r\nDodano element: 8 \r\nDodano element: 37 \r\nDodano element: 18 \r\n"]
[60.650985, "o", "Dodano element: 39 \r\nDodano element: 41 \r\nDodano element: 68 \r\nDodano element: 125 \r\nDodano element: 142 \r\nDodano element: 31 \r\nDodano element: 111 \r\nDodano element: 74 \r\nDodano element: 117 \r\nDodano element: 156 \r\nDodano element: 10 \r\nDodano element: 19 \r\nDodano element: 162 \r\nDodano element: 99 \r\nDodano element: 75 \r\nDodano element: 190 \r\nDodano element: 112 \r\nDodano element: 196 \r\nDodano element: 101 \r\nDodano element: 74 \r\nDodano element: 120 \r\nDodano element: 148 \r\nDodano element: 137 \r\nDodano element: 128 \r\nDodano element: 175 \r\nDodano element: 30 \r\nDodano element: 95 \r\nDodano element: 183 \r\nDodano element: 38 \r\nDodano element: 132 \r\nDodano element: 1 \r\nDodano element: 29 \r\nDodano element: 125 \r\nDodano element: 69 \r\nDodano element: 154 \r\nDodano element: 68 \r\nDodano element: 52 \r\nDodano element: 18 \r\nDodano element: 142 \r\nDodano element: 170 \r\nDodano element: 126 \r\nDodano element: 152 \r\nDodano element: 189 \r\nDodano element: 89 \r\nDodano element: 4 \r\nDodano element: 16 \r\nDodano element: 31 \r\nDodano element:"]
[60.651123, "o", " 116 \r\nDodano element: 12 \r\nDodano element: 132 \r\nDodano element: 142 \r\nDodano element: 133 \r\nDodano element: 32 \r\nDodano element: 31 \r\nDodano element: 13 \r\nDodano element: 159 \r\nDodano element: 13 \r\nDodano element: 108 \r\nDodano element: 142 \r\nDodano element: 3 \r\nDodano element: 192 \r\nDodano element: 96 \r\nDodano element: 32 \r\nDodano element: 69 \r\nDodano element: 117 \r\nDodano element: 139 \r\nDodano element: 137 \r\nDodano element: 170 \r\nDodano element: 157 \r\nDodano element: 31 \r\nDodano element: 92 \r\nDodano element: 83 \r\nDodano element: 136 \r\nDodano element: 33 \r\nDodano element: 124 \r\nDodano element: 140 \r\nDodano element: 49 \r\nDodano element: 155 \r\nDodano element: 8 \r\nDodano element: 62 \r\nDodano element: 39 \r\nDodano element: 150 \r\nDodano element: 147 \r\nDodano element: 72 \r\nDodano element: 134 \r\nDodano element: 160 \r\n120 -> 159 -> 162 -> 172 -> 47 -> 62 -> 7 -> 26 -> 141 -> 15 -> 56 -> 8 -> 37 -> 18 -> 39 -> 41 -> 68 -> 125 -> 142 -> 31 -> 111 -> 74 -> 117 -> 156 -> 10 -> 19 -> 162 -> 99 -> 75 -> 190 -> 112 -> 196 "]
[60.651176, "o", "-> 101 -> 74 -> 120 -> 148 -> 137 -> 128 -> 175 -> 30 -> 95 -> 183 -> 38 -> 132 -> 1 -> 29 -> 125 -> 69 -> 154 -> 68 -> 52 -> 18 -> 142 -> 170 -> 126 -> 152 -> 189 -> 89 -> 4 -> 16 -> 31 -> 116 -> 12 -> 132 -> 142 -> 133 -> 32 -> 31 -> 13 -> 159 -> 13 -> 108 -> 142 -> 3 -> 192 -> 96 -> 32 -> 69 -> 117 -> 139 -> 137 -> 170 -> 157 -> 31 -> 92 -> 83 -> 136 -> 33 -> 124 -> 140 -> 49 -> 155 -> 8 -> 62 -> 39 -> 150 -> 147 -> 72 -> 134 -> 160 -> NULL \r\nusuniento element: 120 \r\nusuniento element: 159 \r\nusuniento element: 162 \r\nusuniento element: 172 \r\nusuniento element: 47 \r\nusuniento element: 62 \r\nusuniento element: 7 \r\nusuniento element: 26 \r\nusuniento element: 141 \r\nusuniento element: 15 \r\nusuniento element: 56 \r\nusuniento element: 8 \r\nusuniento element: 37 \r\nusuniento element: 18 \r\nusuniento element: 39 \r\nusuniento element: 41 \r\nusuniento element: 68 \r\nusuniento element: 125 \r\nusuniento element: 142 \r\nusuniento element: 31 \r\nusuniento element: 111 \r\nusuniento element: 74 \r\nusuniento element: 117 \r\nusuniento eleme"]
[60.65133, "o", "nt: 156 \r\nusuniento element: 10 \r\nusuniento element: 19 \r\nusuniento element: 162 \r\nusuniento element: 99 \r\nusuniento element: 75 \r\nusuniento element: 190 \r\nusuniento element: 112 \r\nusuniento element: 196 \r\nusuniento element: 101 \r\nusuniento element: 74 \r\nusuniento element: 120 \r\nusuniento element: 148 \r\nusuniento element: 137 \r\nusuniento element: 128 \r\nusuniento element: 175 \r\nusuniento element: 30 \r\nusuniento element: 95 \r\nusuniento element: 183 \r\nusuniento element: 38 \r\nusuniento element: 132 \r\nusuniento element: 1 \r\nusuniento element: 29 \r\nusuniento element: 125 \r\nusuniento element: 69 \r\nusuniento element: 154 \r\nusuniento element: 68 \r\nusuniento element: 52 \r\nusuniento element: 18 \r\nusuniento element: 142 \r\nusuniento element: 170 \r\nusuniento element: 126 \r\nusuniento element: 152 \r\nusuniento element: 189 \r\nusuniento element: 89 \r\nusuniento element: 4 \r\nusuniento element: 16 \r\nusuniento element: 31 \r\nusuniento element: 116 \r\nusuniento element: 12 \r\nusuniento element: 132 \r\nusuniento element: 142 \r\nusuniento "]
[60.651435, "o", "element: 133 \r\nusuniento element: 32 \r\nusuniento element: 31 \r\nusuniento element: 13 \r\nusuniento element: 159 \r\nusuniento element: 13 \r\nusuniento element: 108 \r\nusuniento element: 142 \r\nusuniento element: 3 \r\nusuniento element: 192 \r\nusuniento element: 96 \r\nusuniento element: 32 \r\nusuniento element: 69 \r\nusuniento element: 117 \r\nusuniento element: 139 \r\nusuniento element: 137 \r\nusuniento element: 170 \r\nusuniento element: 157 \r\nusuniento element: 31 \r\nusuniento element: 92 \r\nusuniento element: 83 \r\nusuniento element: 136 \r\nusuniento element: 33 \r\nusuniento element: 124 \r\nusuniento element: 140 \r\nusuniento element: 49 \r\nusuniento element: 155 \r\nusuniento element: 8 \r\nusuniento element: 62 \r\nusuniento element: 39 \r\nusuniento element: 150 \r\nusuniento element: 147 \r\nusuniento element: 72 \r\nusuniento element: 134 \r\nusuniento element: 160 \r\nkolejka juz pusta \r\nkolejka juz pusta \r\n"]
[60.651854, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[63.865803, "o", "c"]
[64.119929, "o", "l"]
[64.4182, "o", "e"]
[64.752089, "o", "a"]
[65.235103, "o", "r"]
[79.241611, "o", "\r\n"]
[79.243486, "o", "\u001b[H\u001b[2J\u001b[3J"]
[79.243809, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[83.289269, "o", "g"]
[83.647901, "o", "c"]
[83.921773, "o", "c"]
[85.236068, "o", "\b\u001b[K"]
[85.415633, "o", "\b\u001b[K"]
[85.584517, "o", "\b\u001b[K"]
[86.366565, "o", "clear"]
[86.899084, "o", "\b\b\b\b\b./ex1"]
[87.376996, "o", "\bercise1"]
[88.209695, "o", "\b\b\b\b\b\b\b\b\b\b\bgcc exercise1.c -o ex1"]
[90.95711, "o", "_"]
[91.470653, "o", "2"]
[91.70908, "o", "\b"]
[92.212591, "o", "\b"]
[92.242502, "o", "\b"]
[92.273285, "o", "\b"]
[92.303173, "o", "\b"]
[92.335519, "o", "\b"]
[92.366228, "o", "\b"]
[92.399385, "o", "\b"]
[92.429526, "o", "\b"]
[92.459912, "o", "\b"]
[92.489841, "o", "\b"]
[92.519809, "o", "\b"]
[92.550332, "o", "\b"]
[92.580614, "o", "\b"]
[93.760388, "o", "\u001b[C"]
[94.053696, "o", "\u001b[C"]
[94.327891, "o", "\u001b[C"]
[95.498566, "o", "\u001b[1@_"]
[95.936047, "o", "\u001b[1@2"]
[97.822834, "o", "\r\n"]
[97.896123, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[99.068064, "o", "gcc exercise1_2.c -o ex1_2"]
[99.378397, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bclear\u001b[K"]
[99.760342, "o", "\b\b\b\b\b./ex1"]
[101.443711, "o", "_"]
[101.811341, "o", "2"]
[103.334866, "o", "\b\u001b[K"]
[103.835073, "o", "\b\u001b[K"]
[103.865418, "o", "\b\u001b[K"]
[103.895523, "o", "\b\u001b[K"]
[103.926372, "o", "\b\u001b[K"]
[103.95668, "o", "\b\u001b[K"]
[103.987275, "o", "\b\u001b[K"]
[104.017613, "o", "\u0007"]
[104.048072, "o", "\u0007"]
[104.078942, "o", "\u0007"]
[104.108648, "o", "\u0007"]
[104.139128, "o", "\u0007"]
[104.942846, "o", "c"]
[105.256853, "o", "a"]
[105.422115, "o", "t"]
[105.61011, "o", " "]
[105.824375, "o", "e"]
[106.192757, "o", "x"]
[107.219392, "o", "e"]
[107.467526, "o", "r"]
[107.815883, "o", "c"]
[107.994814, "o", "i"]
[108.239028, "o", "s"]
[108.51335, "o", "e"]
[109.001074, "o", "1"]
[109.687969, "o", "_"]
[110.081535, "o", "2"]
[111.465836, "o", "."]
[111.813976, "o", "c"]
[112.670591, "o", "\r\n"]
[112.672946, "o", "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <time.h>\r\n\r\ntypedef struct Item Element;\r\ntypedef struct LIFO Stos;\r\n\r\nstruct Item{\r\n    int value;\r\n    Element* prev;\r\n};\r\n\r\nstruct LIFO{\r\n    Element* head; //head to zmienna adresowa, ktora przechowuje adres pewnej zmiennej typu Element\r\n    Element* tail;\r\n    int size;\r\n};\r\nStos* createLIFO(){\r\n    Stos* stos = malloc(sizeof(Stos));\r\n    stos->head = NULL;\r\n    stos->tail = NULL;\r\n    stos->size = 0;\r\n    return stos;\r\n}\r\n\r\nbool isFull (Stos* stos){\r\n    if(stos -> size != 0){\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nvoid startFifo(Stos* stos, int value){\r\n    Element* element = malloc(sizeof(Element));\r\n    element -> value = value;\r\n    element -> prev = NULL;\r\n    stos -> head = element;\r\n    stos -> tail = element;\r\n    stos -> size = 1;\r\n\r\n}\r\n\r\nvoid addElement (Stos* stos, int value){\r\n\r\n    if(isFull(stos)){\r\n"]
[112.673028, "o", "        Element* element = malloc(sizeof(Element));\r\n        element -> value = value;\r\n        element -> prev = NULL;\r\n\r\n        element -> prev = stos -> tail;\r\n        stos -> tail = element;\r\n        stos -> size++;\r\n\r\n    }\r\n\r\n    else{\r\n        startFifo(stos, value);\r\n    }\r\n\r\n    printf(\"Dodano element: %d \\n\", value);\r\n}\r\n\r\nvoid removeElement(Stos* stos){\r\n    if(isFull(stos)){\r\n        Element* temporary = stos -> tail;\r\n        printf(\"usuniento element: %d \\n\", stos -> tail -> value);\r\n        stos -> tail = stos -> tail -> prev;\r\n        free(temporary);\r\n        stos -> size--;\r\n    }\r\n    else{\r\n        printf(\"stos juz pusty \\n\");\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nint main(){\r\n    Stos* stos = createLIFO();\r\n    /*\r\n    addElement (stos, 1);\r\n    addElement (stos, 2);\r\n    addElement (stos, 3);\r\n    addElement (stos, 4);\r\n    \r\n    removeElement(stos);\r\n    \r\n    removeElement(stos);\r\n    \r\n    removeElement(stos);\r\n    \r\n    removeElement(stos);\r\n    \r\n    removeElement(stos);\r\n    addElement(stos, 5);"]
[112.673284, "o", "\r\n    */\r\n    \r\n\r\n    \r\n    int i = 0;\r\n    int r;\r\n    srand(time(NULL));\r\n    while (i < 100){\r\n\r\n        r = rand() % 200;\r\n        addElement(stos, r);\r\n        i++;\r\n    }\r\n    \r\n    i = 0;\r\n    while (i < 101){\r\n\r\n\r\n        removeElement(stos);\r\n        i++;\r\n    }\r\n    \r\n    \r\n\r\n\r\n}\r\n"]
[112.673575, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[115.234907, "o", "c"]
[115.423885, "o", "l"]
[115.638179, "o", "e"]
[115.911903, "o", "a"]
[116.271327, "o", "r"]
[116.579129, "o", "\r\n"]
[116.580689, "o", "\u001b[H\u001b[2J\u001b[3J"]
[116.58099, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[119.442343, "o", "."]
[119.980098, "o", "/"]
[121.020493, "o", "e"]
[121.702761, "o", "x"]
[122.296252, "o", "1"]
[123.017538, "o", "_"]
[123.306958, "o", "2"]
[125.163608, "o", "\r\n"]
[125.165336, "o", "Dodano element: 94 \r\nDodano element: 92 \r\nDodano element: 53 \r\nDodano element: 112 \r\nDodano element: 185 \r\nDodano element: 113 \r\nDodano element: 75 \r\nDodano element: 106 \r\nDodano element: 189 \r\nDodano element: 2 \r\nDodano element: 108 \r\nDodano element: 137 \r\nDodano element: 23 \r\n"]
[125.165554, "o", "Dodano element: 46 \r\nDodano element: 64 \r\nDodano element: 8 \r\nDodano element: 168 \r\nDodano element: 80 \r\nDodano element: 156 \r\nDodano element: 150 \r\nDodano element: 136 \r\nDodano element: 54 \r\nDodano element: 59 \r\nDodano element: 28 \r\nDodano element: 38 \r\nDodano element: 66 \r\nDodano element: 22 \r\nDodano element: 31 \r\nDodano element: 19 \r\nDodano element: 56 \r\nDodano element: 31 \r\nDodano element: 113 \r\nDodano element: 100 \r\nDodano element: 36 \r\nDodano element: 178 \r\nDodano element: 86 \r\nDodano element: 149 \r\nDodano element: 53 \r\nDodano element: 144 \r\nDodano element: 139 \r\nDodano element: 55 \r\nDodano element: 53 \r\nDodano element: 28 \r\nDodano element: 30 \r\nDodano element: 99 \r\nDodano element: 45 \r\nDodano element: 38 \r\nDodano element: 20 \r\nDodano element: 77 \r\nDodano element: 146 \r\nDodano element: 122 \r\nDodano element: 13 \r\nDodano element: 0 \r\nDodano element: 134 \r\nDodano element: 194 \r\nDodano element: 39 \r\nDodano element: 0 \r\nDodano element: 16 \r\nDodano element: 70 \r\nDodano element: 20 \r\nDodano element: 25 \r\nDodan"]
[125.165667, "o", "o element: 53 \r\nDodano element: 133 \r\nDodano element: 125 \r\nDodano element: 89 \r\nDodano element: 111 \r\nDodano element: 163 \r\nDodano element: 191 \r\nDodano element: 116 \r\nDodano element: 108 \r\nDodano element: 82 \r\nDodano element: 123 \r\nDodano element: 161 \r\nDodano element: 110 \r\nDodano element: 153 \r\nDodano element: 12 \r\nDodano element: 107 \r\nDodano element: 192 \r\nDodano element: 184 \r\nDodano element: 185 \r\nDodano element: 138 \r\nDodano element: 59 \r\nDodano element: 150 \r\nDodano element: 91 \r\nDodano element: 193 \r\nDodano element: 144 \r\nDodano element: 82 \r\nDodano element: 193 \r\nDodano element: 113 \r\nDodano element: 104 \r\nDodano element: 13 \r\nDodano element: 90 \r\nDodano element: 157 \r\nDodano element: 99 \r\nDodano element: 167 \r\nDodano element: 198 \r\nDodano element: 162 \r\nDodano element: 131 \r\nDodano element: 141 \r\nDodano element: 79 \r\nusuniento element: 79 \r\nusuniento element: 141 \r\nusuniento element: 131 \r\nusuniento element: 162 \r\nusuniento element: 198 \r\nusuniento element: 167 \r\nusuniento element: 99 \r\nusuniento"]
[125.165766, "o", " element: 157 \r\nusuniento element: 90 \r\nusuniento element: 13 \r\nusuniento element: 104 \r\nusuniento element: 113 \r\nusuniento element: 193 \r\nusuniento element: 82 \r\nusuniento element: 144 \r\nusuniento element: 193 \r\nusuniento element: 91 \r\nusuniento element: 150 \r\nusuniento element: 59 \r\nusuniento element: 138 \r\nusuniento element: 185 \r\nusuniento element: 184 \r\nusuniento element: 192 \r\nusuniento element: 107 \r\nusuniento element: 12 \r\nusuniento element: 153 \r\nusuniento element: 110 \r\nusuniento element: 161 \r\nusuniento element: 123 \r\nusuniento element: 82 \r\nusuniento element: 108 \r\nusuniento element: 116 \r\nusuniento element: 191 \r\nusuniento element: 163 \r\n"]
[125.165926, "o", "usuniento element: 111 \r\nusuniento element: 89 \r\nusuniento element: 125 \r\nusuniento element: 133 \r\nusuniento element: 53 \r\nusuniento element: 25 \r\nusuniento element: 20 \r\nusuniento element: 70 \r\nusuniento element: 16 \r\nusuniento element: 0 \r\nusuniento element: 39 \r\n"]
[125.166086, "o", "usuniento element: 194 \r\nusuniento element: 134 \r\nusuniento element: 0 \r\nusuniento element: 13 \r\nusuniento element: 122 \r\nusuniento element: 146 \r\nusuniento element: 77 \r\nusuniento element: 20 \r\nusuniento element: 38 \r\nusuniento element: 45 \r\nusuniento element: 99 \r\nusuniento element: 30 \r\nusuniento element: 28 \r\nusuniento element: 53 \r\nusuniento element: 55 \r\nusuniento element: 139 \r\nusuniento element: 144 \r\nusuniento element: 53 \r\nusuniento element: 149 \r\nusuniento element: 86 \r\nusuniento element: 178 \r\nusuniento element: 36 \r\nusuniento element: 100 \r\nusuniento element: 113 \r\nusuniento element: 31 \r\nusuniento element: 56 \r\nusuniento element: 19 \r\nusuniento element: 31 \r\nusuniento element: 22 \r\nusuniento element: 66 \r\nusuniento element: 38 \r\nusuniento element: 28 \r\nusuniento element: 59 \r\nusuniento element: 54 \r\nusuniento element: 136 \r\nusuniento element: 150 \r\nusuniento element: 156 \r\nusuniento element: 80 \r\nusuniento element: 168 \r\nusuniento element: 8 \r\nusuniento element: 64 \r\nusuniento element: 46 \r\nusun"]
[125.166222, "o", "iento element: 23 \r\nusuniento element: 137 \r\nusuniento element: 108 \r\nusuniento element: 2 \r\nusuniento element: 189 \r\nusuniento element: 106 \r\nusuniento element: 75 \r\nusuniento element: 113 \r\nusuniento element: 185 \r\nusuniento element: 112 \r\nusuniento element: 53 \r\nusuniento element: 92 \r\nusuniento element: 94 \r\nstos juz pusty \r\n"]
[125.16649, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[130.257735, "o", "c"]
[130.535845, "o", "l"]
[130.730978, "o", "e"]
[131.23859, "o", "a"]
[131.606261, "o", "r"]
[131.899772, "o", "\r\n"]
[131.901671, "o", "\u001b[H\u001b[2J\u001b[3J"]
[131.902007, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[134.728004, "o", "clear"]
[135.03173, "o", "\b\b\b\b\b./ex1_2"]
[135.321181, "o", "\b\b\b\b\b\b\b\u001b[2Pclear"]
[135.778903, "o", "\b\b\b\bat exercise1_2.c"]
[136.595329, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bgcc exercise1_2.c -o ex1_2"]
[138.205009, "o", "\b\u001b[K"]
[138.423173, "o", "\b\u001b[K"]
[138.800887, "o", "\b\u001b[K"]
[139.777126, "o", "2"]
[140.100952, "o", "\b"]
[140.601183, "o", "\b"]
[140.636862, "o", "\b"]
[140.666758, "o", "\b"]
[140.697159, "o", "\b"]
[140.728084, "o", "\b"]
[140.758254, "o", "\b"]
[140.788544, "o", "\b"]
[140.819571, "o", "\b"]
[141.634509, "o", "\b\u001b[1P"]
[142.346543, "o", "\b\u001b[1P"]
[142.66523, "o", "\b\u001b[1P"]
[142.979344, "o", "\u001b[1@2"]
[147.217223, "o", "\r\n"]
[147.286884, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[148.913847, "o", "c"]
[149.218679, "o", "a"]
[149.361428, "o", "t"]
[149.551187, "o", " "]
[149.734879, "o", "e"]
[150.043931, "o", "x"]
[150.303082, "o", "e"]
[150.591444, "o", "r"]
[150.920009, "o", "c"]
[151.099505, "o", "i"]
[151.263913, "o", "s"]
[151.547343, "o", "e"]
[152.060155, "o", "2"]
[152.493568, "o", "."]
[152.797334, "o", "c"]
[153.016686, "o", " "]
[154.235924, "o", "|"]
[154.619413, "o", " "]
[154.833639, "o", "l"]
[155.002786, "o", "e"]
[155.256807, "o", "s"]
[155.500917, "o", "s"]
[156.392637, "o", "\r\n"]
[156.397314, "o", "\u001b[?1049h\u001b[22;0;0t\u001b[?1h\u001b=\r"]
[156.397569, "o", "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <time.h>\r\n\r\ntypedef struct Item Element;\r\ntypedef struct LinkedList Lista;\r\n\r\nstruct Item{\r\n    int value;\r\n    Element* next;\r\n};\r\n\r\nstruct LinkedList{\r\n    Element* head;\r\n    Element* tail;\r\n    int lenght;\r\n};\r\n\r\nLista* createList(){\r\n    Lista* list = malloc (sizeof(Lista));\r\n    list -> head = NULL;\r\n    list -> tail = NULL;\r\n    list -> lenght = 0;\r\n    return list;\r\n}\r\n\r\nvoid startList (Lista* list, int value){\r\n    Element* element = malloc (sizeof(Element));\r\n"]
[156.397709, "o", "    element -> value = value;\r\n    element -> next = NULL;\r\n    list -> head = element;\r\n    list -> tail = element;\r\n    list -> lenght = 1;   \r\n}\r\n\r\nbool isFull (Lista* lista){\r\n    if(lista -> lenght != 0){\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nvoid addAfterList (Lista* list, int value){\r\n    if(isFull(list)){\r\n        Element* element = malloc(sizeof(Element));\r\n        element -> value = value;\r\n        element -> next = NULL;\r\n        list -> head -> next = element;\r\n        list"]
[156.398013, "o", " -> head = element;\r\n        list -> lenght++;\r\n        return;\r\n\r\n    }\r\n    else{\r\n        startList(list, value);\r\n    }\r\n}\r\n\r\nvoid removeElemnt (Lista* list, int index){\r\n\r\n\r\n\r\n    if(index >= list -> lenght){\r\n        printf(\"lista juz pusta \\n\");\r\n    }\r\n    else if(index == 0){\r\n\r\n        Element* temp = list -> tail;\r\n        \r\n\r\n        list -> tail = list -> tail -> next;\r\n        \r\n        free(temp);\r\n        list -> lenght--;\r\n    }\r\n    else{"]
[156.39813, "o", "\r\n\r\n        Element* temp = list -> tail;\r\n        Element* prev = NULL;\r\n\r\n        for(int i = 0; i <= index; i++){\r\n            prev = temp;\r\n            temp = temp -> next;\r\n        }\r\n\r\n        prev -> next = temp -> next;\r\n        free(temp);\r\n        list -> lenght--;\r\n\r\n    }\r\n}\r\n\r\nbool check (Lista* list, int value) {\r\n    Element* temp = list -> tail;\r\n    while (temp != NULL) {\r\n        if (temp -> value == value) {\r\n            return true;\r\n        } else {          \r\n            temp = temp -> next;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nint find (Lista* list, int index) {\r\n\r\n:\u001b[K"]
[158.229392, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[158.229614, "o", "    if (index >= list -> lenght) {\r\n:\u001b[K"]
[158.677324, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        return -1; //czyli ze nie ma takiego indeksu\r\n:\u001b[K"]
[158.866572, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[158.867038, "o", "    }\r\n:\u001b[K"]
[159.065734, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[159.06595, "o", "    \r\n:\u001b[K"]
[159.27995, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    Element* temp = list -> tail;\r\n:\u001b[K"]
[159.48384, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[159.484065, "o", "    for (int i = 1; i <= index; i++) {\r\n:\u001b[K"]
[159.677961, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[159.678141, "o", "        temp = temp -> next;\r\n:\u001b[K"]
[160.178447, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[160.178619, "o", "    }\r\n:\u001b[K"]
[160.208407, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    return temp -> value;\r\n:\u001b[K"]
[160.238926, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[160.239084, "o", "}\r\n:\u001b[K"]
[160.269754, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[160.269837, "o", "\r\n:\u001b[K"]
[160.29936, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[Kvoid displayList (Lista* list) {\r\n:\u001b[K"]
[160.329469, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    if (isFull (list)) {\r\n:\u001b[K"]
[160.359771, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[160.360019, "o", "        Element* temp = list -> tail;\r\n:\u001b[K"]
[160.389701, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[160.389875, "o", "        while (temp != NULL) {\r\n:\u001b[K"]
[160.420245, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[160.42044, "o", "            printf (\"%d -> \", temp -> value);\r\n:\u001b[K"]
[160.574298, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K            temp = temp -> next;\r\n:\u001b[K"]
[160.798547, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[160.798745, "o", "        }\r\n:\u001b[K"]
[161.023159, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf (\"NULL\\n\");\r\n:\u001b[K"]
[161.177855, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.178064, "o", "        \r\n:\u001b[K"]
[161.677631, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.677882, "o", "    }\r\n:\u001b[K"]
[161.707585, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.707804, "o", "    else{\r\n:\u001b[K"]
[161.738399, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        printf (\"Elista juz pusta!\\n\");\r\n:\u001b[K"]
[161.769482, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.769656, "o", "        return;\r\n:\u001b[K"]
[161.802361, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.802559, "o", "    }\r\n:\u001b[K"]
[161.830677, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.83087, "o", "}\r\n:\u001b[K"]
[161.86071, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.860959, "o", "\r\n:\u001b[K"]
[161.891028, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.891253, "o", "Lista* merge (Lista* list1, Lista* list2) {\r\n:\u001b[K"]
[161.921889, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.922182, "o", "    Lista* merged = createList();\r\n:\u001b[K"]
[161.951376, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[161.951594, "o", "    Element* temp = list1 -> tail;\r\n:\u001b[K"]
[161.982457, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[162.01356, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.013776, "o", "    //Adding elements from first list to new lists.\r\n:\u001b[K"]
[162.043884, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.043959, "o", "    while (temp != NULL) {\r\n:\u001b[K"]
[162.074063, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.074292, "o", "        addAfterList (merged, temp -> value);\r\n:\u001b[K"]
[162.104242, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.104424, "o", "        temp = temp -> next;\r\n:\u001b[K"]
[162.134226, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    }\r\n:\u001b[K"]
[162.164535, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.16472, "o", "\r\n:\u001b[K"]
[162.199707, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.199911, "o", "    temp = list2 -> tail;\r\n:\u001b[K"]
[162.229807, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[162.261064, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    //Adding elements from second list to new lists.\r\n:\u001b[K"]
[162.291772, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.291943, "o", "    while (temp != NULL) {\r\n:\u001b[K"]
[162.322085, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        addAfterList (merged, temp -> value);\r\n:\u001b[K"]
[162.352522, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.352741, "o", "        temp = temp -> next;\r\n:\u001b[K"]
[162.382875, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.383049, "o", "    }\r\n:\u001b[K"]
[162.412592, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.412858, "o", "    return merged;\r\n:\u001b[K"]
[162.442489, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K}\r\n:\u001b[K"]
[162.472994, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[162.503087, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.503301, "o", "int main(){\r\n:\u001b[K"]
[162.533223, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[162.563253, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.56353, "o", "    printf(\"dupa1\\n\");\r\n:\u001b[K"]
[162.593582, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.59373, "o", "    Lista* list1 = createList();\r\n:\u001b[K"]
[162.623632, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.62386, "o", "    printf(\"dupa2\\n\");\r\n:\u001b[K"]
[162.657504, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.657706, "o", "    addAfterList (list1, 10);\r\n:\u001b[K"]
[162.688461, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf(\"dupa3\\n\");\r\n:\u001b[K"]
[162.720463, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.72066, "o", "    displayList (list1);\r\n:\u001b[K"]
[162.750756, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.750937, "o", "    printf(\"dupa4\\n\");\r\n:\u001b[K"]
[162.781052, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    addAfterList (list1, 11);\r\n:\u001b[K"]
[162.812295, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf(\"dupa5\\n\");\r\n:\u001b[K"]
[162.843228, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.843439, "o", "    displayList (list1);\r\n:\u001b[K"]
[162.874348, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.87459, "o", "    printf(\"dupa6\\n\");\r\n:\u001b[K"]
[162.907897, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.908294, "o", "    addAfterList (list1, 12);\r\n:\u001b[K"]
[162.937682, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf(\"dupa7\\n\");\r\n:\u001b[K"]
[162.969523, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[162.969715, "o", "    displayList (list1);\r\n:\u001b[K"]
[162.999882, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.000118, "o", "    printf(\"dupa8\\n\");\r\n:\u001b[K"]
[163.030177, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf (\"%d\\n\", check(list1, 12));\r\n:\u001b[K"]
[163.061242, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.061425, "o", "    printf(\"dupa9\\n\");\r\n:\u001b[K"]
[163.092006, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.092227, "o", "    printf (\"%d\\n\", find(list1, 0));\r\n:\u001b[K"]
[163.121446, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf(\"dupa10\\n\");\r\n:\u001b[K"]
[163.151679, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    removeElemnt(list1, 0);\r\n:\u001b[K"]
[163.18162, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.181789, "o", "    printf(\"dupa11\\n\");\r\n:\u001b[K"]
[163.212003, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    displayList (list1);\r\n:\u001b[K"]
[163.243046, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.243246, "o", "    printf(\"dupa12\\n\");\r\n:\u001b[K"]
[163.273893, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.274271, "o", "\r\n:\u001b[K"]
[163.304107, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.304281, "o", "    Lista* list2 = createList();\r\n:\u001b[K"]
[163.334824, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.335061, "o", "    printf(\"dupa13\\n\");\r\n:\u001b[K"]
[163.365203, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    addAfterList (list2, 16);\r\n:\u001b[K"]
[163.396612, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.396823, "o", "    printf(\"dupa14\\n\");\r\n:\u001b[K"]
[163.427169, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.427374, "o", "    addAfterList (list2, 18);\r\n:\u001b[K"]
[163.458327, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.458552, "o", "    printf(\"dupa15\\n\");\r\n:\u001b[K"]
[163.491678, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.491885, "o", "    addAfterList (list2, 87);\r\n:\u001b[K"]
[163.52196, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.522162, "o", "    printf(\"dupa16\\n\");\r\n:\u001b[K"]
[163.553355, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[163.58321, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.583407, "o", "    Lista* merged = merge (list1, list2);\r\n:\u001b[K"]
[163.614112, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf(\"dupa17\\n\");\r\n:\u001b[K"]
[163.645459, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.645627, "o", "    displayList (merged);\r\n:\u001b[K"]
[163.675806, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.676013, "o", "    printf(\"dupa18\\n\");\r\n:\u001b[K"]
[163.707697, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.70787, "o", "\r\n:\u001b[K"]
[163.737154, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.737351, "o", "    free(list1);\r\n:\u001b[K"]
[163.767769, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.767967, "o", "    free(list2);\r\n:\u001b[K"]
[163.802375, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.802554, "o", "    free(merged);\r\n:\u001b[K"]
[163.832783, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.832963, "o", "\r\n:\u001b[K"]
[163.863238, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.86347, "o", "\r\n:\u001b[K"]
[163.894302, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.894506, "o", "    int value;\r\n:\u001b[K"]
[163.92649, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.926686, "o", "    int index;\r\n:\u001b[K"]
[163.955313, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.95548, "o", "    double executionTime;\r\n:\u001b[K"]
[163.985826, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[163.986084, "o", "    clock_t beginTime;\r\n:\u001b[K"]
[164.015652, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    clock_t endTime;\r\n:\u001b[K"]
[164.045749, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.04609, "o", "\r\n:\u001b[K"]
[164.075796, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.075965, "o", "    Lista* czasy = createList();\r\n:\u001b[K"]
[164.106215, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[164.138666, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    srand(time(NULL));\r\n:\u001b[K"]
[164.169673, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.170065, "o", "\r\n:\u001b[K"]
[164.200428, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.200671, "o", "    for (int i = 0; i < 1000; i++) {\r\n:\u001b[K"]
[164.230902, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.231035, "o", "        value = rand() % 2137;\r\n:\u001b[K"]
[164.260885, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.261086, "o", "        addAfterList (czasy, value);\r\n:\u001b[K"]
[164.29092, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.291088, "o", "    }\r\n:\u001b[K"]
[164.322043, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[164.351186, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.351377, "o", "    index = rand() % czasy -> lenght - 1; //wybieram jeden losowy element tablicy\r\n:\u001b[K"]
[164.385218, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.385386, "o", "    int rozmiar = 10000;\r\n:\u001b[K"]
[164.416933, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[164.446923, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.447139, "o", "    beginTime = clock();\r\n:\u001b[K"]
[164.478291, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.478482, "o", "\r\n:\u001b[K"]
[164.507216, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.507392, "o", "    for(int i = 0; i < rozmiar; i++){\r\n:\u001b[K"]
[164.538279, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.538486, "o", "        find (czasy, index);\r\n:\u001b[K"]
[164.568758, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.569069, "o", "    }\r\n:\u001b[K"]
[164.598821, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.599002, "o", "\r\n:\u001b[K"]
[164.629171, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.629371, "o", "    endTime = clock(); //koniec pomiaru czasu dostepu do losowego (caly czas tego samego) elementu 10000 razy\r\n:\u001b[K"]
[164.659915, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.660121, "o", "\r\n:\u001b[K"]
[164.690268, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.690468, "o", "    executionTime = (double) (endTime - beginTime) / (CLOCKS_PER_SEC * rozmiar);\r\n:\u001b[K"]
[164.721279, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.72147, "o", "    printf (\"Sprawdzanie danego elementu %d 10000 razy trwa srednio na raz: %2.15f \\n\", index, executionTime);\r\n:\u001b[K"]
[164.751696, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[164.783159, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.783455, "o", "\r\n:\u001b[K"]
[164.813773, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.813942, "o", "    int* random_index = malloc (rozmiar * sizeof(int));\r\n:\u001b[K"]
[164.844346, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[164.875118, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.875364, "o", "    beginTime = clock();\r\n:\u001b[K"]
[164.905446, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.905639, "o", "    for(int i = 0; i < rozmiar; i++){\r\n:\u001b[K"]
[164.93572, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.935928, "o", "        find(czasy, random_index[i]);\r\n:\u001b[K"]
[164.96553, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    }\r\n:\u001b[K"]
[164.99734, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[164.99754, "o", "    endTime = clock();\r\n:\u001b[K"]
[165.028234, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.028601, "o", "\r\n:\u001b[K"]
[165.05914, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.059571, "o", "    executionTime = (double) (endTime - beginTime) / (CLOCKS_PER_SEC * rozmiar);\r\n:\u001b[K"]
[165.090075, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.090317, "o", "    printf(\"Sprawdzanie dostepu do losowych elementow trwa srednio        : %2.15f \\n\", executionTime);\r\n:\u001b[K"]
[165.12096, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[165.152264, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.152465, "o", "    free(random_index);\r\n:\u001b[K"]
[165.182837, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.183058, "o", "\r\n:\u001b[K"]
[165.217114, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.217285, "o", "    free(czasy);\r\n:\u001b[K"]
[165.248701, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.24886, "o", "    \r\n:\u001b[K"]
[165.278503, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.278755, "o", "    return 0;\r\n:\u001b[K"]
[165.309424, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.309631, "o", "}\r\n:\u001b[K"]
[165.339377, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.339555, "o", "\r\n:\u001b[K"]
[165.369669, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.369856, "o", "\r\n:\u001b[K"]
[165.399711, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.3999, "o", "\r\n:\u001b[K"]
[165.430117, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[165.461904, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.462158, "o", "\r\n:\u001b[K"]
[165.491661, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[165.522585, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.522781, "o", "\r\n:\u001b[K"]
[165.551811, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[165.581695, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.611624, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.642124, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.642299, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.676246, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.67644, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.707362, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.738072, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.738292, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.768281, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.798795, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.799073, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.82867, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.828905, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.858968, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.889218, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.889305, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.919911, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.920324, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.951994, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[165.952211, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[165.981696, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[166.011773, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[166.04179, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[166.041954, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[166.071673, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[167.446005, "o", "\r\u001b[K\u001b[?1l\u001b>\u001b[?1049l\u001b[23;0;0t"]
[167.446918, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[169.576775, "o", "cat exercise2.c | less"]
[170.140208, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bgcc exercise2.c -o ex2"]
[170.746916, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bclear\u001b[K"]
[171.672338, "o", "\b\b\b\b\b./ex1_2"]
[172.464474, "o", "\b\b\b\b\b\b\b\u001b[2Pclear"]
[173.604932, "o", "\b\b\b\b\b./ex1_2"]
[177.567932, "o", "\b\u001b[K"]
[178.96699, "o", "\b\u001b[K"]
[179.505677, "o", "\b\u001b[K"]
[180.286747, "o", "2"]
[191.404863, "o", "\r\n"]
[191.40629, "o", "dupa1\r\ndupa2\r\ndupa3\r\n10 -> NULL\r\ndupa4\r\ndupa5\r\n10 -> 11 -> NULL\r\ndupa6\r\ndupa7\r\n10 -> 11 -> 12 -> NULL\r\ndupa8\r\n1\r\ndupa9\r\n10\r\ndupa10\r\ndupa11\r\n"]
[191.40647, "o", "11 -> 12 -> NULL\r\ndupa12\r\ndupa13\r\ndupa14\r\ndupa15\r\ndupa16\r\ndupa17\r\n11 -> 12 -> 16 -> 18 -> 87 -> NULL\r\ndupa18\r\n"]
[191.435265, "o", "Sprawdzanie danego elementu 629 10000 razy trwa srednio na raz: 0.000002850200000 \r\n"]
[191.435508, "o", "Sprawdzanie dostepu do losowych elementow trwa srednio        : 0.000000004800000 \r\n"]
[191.435669, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[195.966805, "o", "./ex2"]
[196.194688, "o", "\b\b\b\b\bcat exercise2.c | less"]
[197.018052, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bgcc exercise2.c -o ex2"]
[199.236754, "o", "\b\u001b[K"]
[199.521472, "o", "3"]
[199.779326, "o", "\b"]
[200.279626, "o", "\b"]
[200.309681, "o", "\b"]
[200.339972, "o", "\b"]
[200.371234, "o", "\b"]
[200.401279, "o", "\b"]
[200.431593, "o", "\b"]
[200.46119, "o", "\b"]
[200.491411, "o", "\b"]
[200.522366, "o", "\b"]
[200.551757, "o", "\b"]
[200.582455, "o", "\b"]
[201.691568, "o", "\u001b[C"]
[201.966429, "o", "\u001b[C"]
[202.34873, "o", "\u001b[C"]
[202.836471, "o", "\b\u001b[1P"]
[203.05586, "o", "\u001b[1@3"]
[204.230937, "o", "\r\n"]
[204.302002, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[205.406472, "o", "gcc exercise3.c -o ex3"]
[205.645329, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b./ex2\u001b[K"]
[205.898821, "o", "\b\b\b\b\bcat exercise2.c | less"]
[207.681379, "o", "\b"]
[208.181803, "o", "\b"]
[208.211694, "o", "\b"]
[208.246403, "o", "\b"]
[208.276835, "o", "\b"]
[208.306611, "o", "\b"]
[208.336355, "o", "\b"]
[208.367401, "o", "\b"]
[208.57303, "o", "\b"]
[209.583242, "o", "\b\u001b[1P"]
[209.787617, "o", "\u001b[1@3"]
[211.291098, "o", "\r\n"]
[211.293769, "o", "\u001b[?1049h\u001b[22;0;0t\u001b[?1h\u001b=\r"]
[211.294017, "o", "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <stdbool.h>\r\n#include <time.h>\r\n\r\ntypedef struct Item Element;\r\ntypedef struct LinkedList Lista;\r\n\r\nstruct Item{\r\n    int value;\r\n    Element* next;\r\n    Element* prev;\r\n};\r\n\r\nstruct LinkedList{\r\n    int lenght;\r\n    Element* head;\r\n    \r\n};\r\n\r\nLista* createList(){\r\n    Lista* list = malloc (sizeof(Lista));\r\n    list -> head = NULL;\r\n    list -> lenght = 0;\r\n    return list;\r\n}\r\n\r\nvoid startList (Lista* list, int value){\r\n    Element* element = malloc (sizeof(Element));\r\n    element -> value = value;\r\n    element -> next = element;\r\n    element -> prev = element;\r\n    list -> head = element;\r\n    list -> lenght = 1;   \r\n}\r\n\r\nbool isFull (Lista* lista){\r\n    if(lista -> lenght != 0){\r\n        return true;\r\n    }\r\n    else{\r\n        return false;\r\n    }\r\n}\r\n\r\nvoid addAfterList (Lista* list, int value){\r\n    if(isFull(list)){\r\n        Element* element = malloc(sizeof(Element));\r\n        element -> value = value;\r\n        element -> prev = list -> head -> prev;\r\n "]
[211.294107, "o", "       element -> next = list -> head;\r\n        li"]
[211.294195, "o", "st -> head -> prev -> next = element;\r\n        list -> head -> prev = element;\r\n        list -> lenght++;\r\n    }\r\n    else{\r\n        startList(list, value);\r\n    }\r\n}\r\n\r\nvoid removeElemnt (Lista* list, int index){\r\n\r\n\r\n    Element* temp = list -> head;\r\n    if(index >= list -> lenght){\r\n        printf(\"lista juz pusta \\n\");\r\n    }\r\n    else if(index == 0){\r\n\r\n        //Element* temp = list -> head;\r\n        \r\n        temp -> next -> prev = temp -> prev;\r\n        temp -> prev -> next = temp -> next;\r\n        list -> head = temp -> next;\r\n        list -> lenght--;\r\n        \r\n\r\n    }\r\n    else if (index < list -> lenght/2){\r\n        //Element* temp = list -> head;\r\n        for(int i = 1; i <= index; i++){\r\n            temp = temp -> next;\r\n        }\r\n    }\r\n    else{\r\n        //Element* temp = list -> head;\r\n        int end = list -> lenght -1;\r\n        for(int i = end; i >= index; i--){\r\n            temp = temp -> prev;\r\n        }\r\n    }\r\n\r\n    temp -> next -> prev = temp -> prev;\r\n    temp -> prev -> next = te"]
[211.294323, "o", "mp -> next;\r\n    list -> lenght--;\r\n    free(temp);\r\n    return;\r\n}  \r\n\r\nbool check (Lista* list, int value) {\r\n    \r\n    Element* temp = list -> head;\r\n    int end = list -> lenght;\r\n\r\n    for (int i = 0; i < end; i++) {\r\n        \r\n        if (temp -> value ==  value) {\r\n            return true;\r\n        } else {\r\n:\u001b[K"]
[212.740415, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K            \r\n:\u001b[K"]
[213.239857, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.240089, "o", "            temp = temp -> next;\r\n:\u001b[K"]
[213.26953, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        }\r\n:\u001b[K"]
[213.300556, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.300764, "o", "    }\r\n:\u001b[K"]
[213.331297, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.331382, "o", "    return false;\r\n:\u001b[K"]
[213.362989, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.36318, "o", "}\r\n:\u001b[K"]
[213.392324, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.392576, "o", "\r\n:\u001b[K"]
[213.42285, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.423014, "o", "int find (Lista* list, int index) {\r\n:\u001b[K"]
[213.453472, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    \r\n:\u001b[K"]
[213.484605, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    if (index >= list -> lenght) {\r\n:\u001b[K"]
[213.514904, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.515365, "o", "        return -1;\r\n:\u001b[K"]
[213.54453, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    }\r\n:\u001b[K"]
[213.576004, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[213.607352, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.607605, "o", "    Element* temp = list -> head;\r\n:\u001b[K"]
[213.638026, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[213.670555, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.670762, "o", "    if (index < list -> lenght / 2) {\r\n:\u001b[K"]
[213.701067, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.701295, "o", "        for (int i = 1; i <= index; i++) {\r\n:\u001b[K"]
[213.731668, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.731846, "o", "            temp = temp -> next;\r\n:\u001b[K"]
[213.761733, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.761899, "o", "        }\r\n:\u001b[K"]
[213.79212, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.792176, "o", "    } else {\r\n:\u001b[K"]
[213.823129, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.823352, "o", "        \r\n:\u001b[K"]
[213.853546, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.853753, "o", "        int start = list -> lenght - 1;\r\n:\u001b[K"]
[213.883506, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.883659, "o", "\r\n:\u001b[K"]
[213.915335, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.91543, "o", "        for (int i = start; i >= index; i--) {\r\n:\u001b[K"]
[213.943679, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[213.943849, "o", "            temp = temp -> prev;\r\n:\u001b[K"]
[213.976585, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        }\r\n:\u001b[K"]
[214.004647, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.004823, "o", "    }\r\n:\u001b[K"]
[214.034525, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[214.064714, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.06491, "o", "    return temp -> value;\r\n:\u001b[K"]
[214.094679, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K}\r\n:\u001b[K"]
[214.124666, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.124861, "o", "\r\n:\u001b[K"]
[214.154576, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.154722, "o", "void displayList (Lista* list){\r\n:\u001b[K"]
[214.184932, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[214.215218, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.215419, "o", "    if(isFull(list)){\r\n:\u001b[K"]
[214.247206, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.247503, "o", "        Element* temp = list -> head;\r\n:\u001b[K"]
[214.275581, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.275763, "o", "        int end = list -> lenght;\r\n:\u001b[K"]
[214.30605, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[214.337066, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.337231, "o", "        printf (\"(Head) \");\r\n:\u001b[K"]
[214.367265, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.367555, "o", "\r\n:\u001b[K"]
[214.39888, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        for (int i = 0; i < end; i++) {\r\n:\u001b[K"]
[214.430269, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K            printf (\"%d -> \", temp -> value);\r\n:\u001b[K"]
[214.461779, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.461941, "o", "            temp = temp -> next;\r\n:\u001b[K"]
[214.490853, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        }\r\n:\u001b[K"]
[214.520801, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[214.55098, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.551187, "o", "    printf (\"%d (Head)\\n\", (list -> head -> value));\r\n:\u001b[K"]
[214.581893, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.581987, "o", "    }\r\n:\u001b[K"]
[214.611276, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.6115, "o", "    else{\r\n:\u001b[K"]
[214.641645, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.641804, "o", "        printf (\"lista juz pusta\\n\");\r\n:\u001b[K"]
[214.671606, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[214.702409, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.702647, "o", "    }\r\n:\u001b[K"]
[214.732915, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.733186, "o", "    \r\n:\u001b[K"]
[214.762283, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.762469, "o", "}\r\n:\u001b[K"]
[214.793485, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.79365, "o", "\r\n:\u001b[K"]
[214.823689, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.823854, "o", "Lista* merge (Lista* list1, Lista* list2) {\r\n:\u001b[K"]
[214.855483, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.855695, "o", "    Lista* merged = createList ();\r\n:\u001b[K"]
[214.886237, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.886307, "o", "\r\n:\u001b[K"]
[214.916857, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.917085, "o", "    Element* temp = list1 -> head;\r\n:\u001b[K"]
[214.946438, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[214.946641, "o", "    int end = list1 -> lenght;\r\n:\u001b[K"]
[214.976811, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[215.007149, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.007324, "o", "    for (int i = 0; i < end; i++) {\r\n:\u001b[K"]
[215.037472, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K        addAfterList (merged, temp -> value);\r\n:\u001b[K"]
[215.068159, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.068234, "o", "        temp = temp -> next;\r\n:\u001b[K"]
[215.098954, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.099109, "o", "    }\r\n:\u001b[K"]
[215.129327, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[215.160814, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[215.191329, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    temp = list2 -> head;\r\n:\u001b[K"]
[215.221791, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    end = list2 -> lenght;\r\n:\u001b[K"]
[215.253451, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[215.284183, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    for (int i = 0; i < end; i++) {\r\n:\u001b[K"]
[215.315221, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.315438, "o", "        addAfterList (merged, temp -> value);\r\n:\u001b[K"]
[215.345571, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.345786, "o", "        temp = temp -> next;\r\n:\u001b[K"]
[215.376901, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.377035, "o", "    }\r\n:\u001b[K"]
[215.408544, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[215.43863, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.438823, "o", "    free(temp);\r\n:\u001b[K"]
[215.468902, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.469095, "o", "    return merged;\r\n:\u001b[K"]
[215.499071, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.499296, "o", "}\r\n:\u001b[K"]
[215.530599, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.530798, "o", "\r\n:\u001b[K"]
[215.560276, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.56045, "o", "int main(){\r\n:\u001b[K"]
[215.590433, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.590619, "o", "\r\n:\u001b[K"]
[215.622057, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.622306, "o", "    printf(\"dupa1\\n\");\r\n:\u001b[K"]
[215.651593, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.651791, "o", "    Lista* list1 = createList();\r\n:\u001b[K"]
[215.685968, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.686141, "o", "    printf(\"dupa2\\n\");\r\n:\u001b[K"]
[215.716266, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.71645, "o", "    addAfterList (list1, 8);\r\n:\u001b[K"]
[215.747364, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.747538, "o", "    printf(\"dupa3\\n\");\r\n:\u001b[K"]
[215.778133, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.77834, "o", "    displayList (list1);\r\n:\u001b[K"]
[215.812247, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.812407, "o", "    printf(\"dupa4\\n\");\r\n:\u001b[K"]
[215.84322, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.843459, "o", "    addAfterList (list1, 17);\r\n:\u001b[K"]
[215.874308, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf(\"dupa5\\n\");\r\n:\u001b[K"]
[215.905233, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.905377, "o", "    displayList (list1);\r\n:\u001b[K"]
[215.935387, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.935557, "o", "    printf(\"dupa6\\n\");\r\n:\u001b[K"]
[215.965425, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.965592, "o", "    addAfterList (list1, 19);\r\n:\u001b[K"]
[215.995783, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[215.99599, "o", "    printf(\"dupa7\\n\");\r\n:\u001b[K"]
[216.025708, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.025929, "o", "    displayList (list1);\r\n:\u001b[K"]
[216.055684, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.055907, "o", "    printf(\"dupa8\\n\");\r\n:\u001b[K"]
[216.087126, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.087363, "o", "    printf (\"%d\\n\", check(list1, 17));\r\n:\u001b[K"]
[216.117841, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.118142, "o", "    printf(\"dupa9\\n\");\r\n:\u001b[K"]
[216.147424, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.1476, "o", "    printf (\"%d\\n\", find(list1, 0));\r\n:\u001b[K"]
[216.178451, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.178643, "o", "    printf(\"dupa10\\n\");\r\n:\u001b[K"]
[216.209249, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.209471, "o", "    removeElemnt(list1, 0);\r\n:\u001b[K"]
[216.239945, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.240109, "o", "    printf(\"dupa11\\n\");\r\n:\u001b[K"]
[216.273067, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.273269, "o", "    displayList (list1);\r\n:\u001b[K"]
[216.30089, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.301072, "o", "    printf(\"dupa12\\n\");\r\n:\u001b[K"]
[216.33134, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[216.361475, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.361701, "o", "    Lista* list2 = createList();\r\n:\u001b[K"]
[216.394098, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.394271, "o", "    printf(\"dupa13\\n\");\r\n:\u001b[K"]
[216.424368, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.424585, "o", "    addAfterList (list2, 22);\r\n:\u001b[K"]
[216.45506, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf(\"dupa14\\n\");\r\n:\u001b[K"]
[216.48464, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.484892, "o", "    addAfterList (list2, 55);\r\n:\u001b[K"]
[216.514557, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.514734, "o", "    printf(\"dupa15\\n\");\r\n:\u001b[K"]
[216.544755, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    addAfterList (list2, 89);\r\n:\u001b[K"]
[216.574784, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.574972, "o", "    printf(\"dupa16\\n\");\r\n:\u001b[K"]
[216.60502, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[216.635945, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.636018, "o", "    Lista* merged = merge (list1, list2);\r\n:\u001b[K"]
[216.666772, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.667049, "o", "    printf(\"dupa17\\n\");\r\n:\u001b[K"]
[216.696132, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[216.696322, "o", "    displayList (merged);\r\n:\u001b[K"]
[216.97704, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    printf(\"dupa18\\n\");\r\n:\u001b[K"]
[217.476731, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.47694, "o", "\r\n:\u001b[K"]
[217.506897, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.507146, "o", "    free(list1);\r\n:\u001b[K"]
[217.536913, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.537243, "o", "    free(list2);\r\n:\u001b[K"]
[217.568168, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.568834, "o", "    free(merged);\r\n:\u001b[K"]
[217.598128, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[217.629437, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.629616, "o", "    int value;\r\n:\u001b[K"]
[217.660513, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.660762, "o", "    int index;\r\n:\u001b[K"]
[217.690642, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.690865, "o", "    double executionTime;\r\n:\u001b[K"]
[217.721115, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.721339, "o", "    clock_t beginTime;\r\n:\u001b[K"]
[217.752009, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[217.752307, "o", "    clock_t endTime;\r\n:\u001b[K"]
[217.782344, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[217.812751, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    Lista* czasy = createList();\r\n:\u001b[K"]
[218.047285, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.047461, "o", "\r\n:\u001b[K"]
[218.548034, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.548234, "o", "    srand(time(NULL));\r\n:\u001b[K"]
[218.578112, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.578155, "o", "\r\n:\u001b[K"]
[218.6083, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.608495, "o", "    for (int i = 0; i < 1000; i++) {\r\n:\u001b[K"]
[218.643448, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.643594, "o", "        value = rand() % 2137;\r\n:\u001b[K"]
[218.673389, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.673553, "o", "        addAfterList (czasy, value);\r\n:\u001b[K"]
[218.704525, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.704789, "o", "    }\r\n:\u001b[K"]
[218.737592, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.737679, "o", "\r\n:\u001b[K"]
[218.767015, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.767185, "o", "    index = rand() % czasy -> lenght - 1; //wybieram jeden losowy element tablicy\r\n:\u001b[K"]
[218.798122, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    int rozmiar = 10000;\r\n:\u001b[K"]
[218.829404, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.82964, "o", "\r\n:\u001b[K"]
[218.859854, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    beginTime = clock();\r\n:\u001b[K"]
[218.889969, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.890395, "o", "\r\n:\u001b[K"]
[218.923014, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.923184, "o", "    for(int i = 0; i < rozmiar; i++){\r\n:\u001b[K"]
[218.953499, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.953688, "o", "        find (czasy, index);\r\n:\u001b[K"]
[218.985343, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[218.985521, "o", "    }\r\n:\u001b[K"]
[219.016372, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[219.016581, "o", "\r\n:\u001b[K"]
[219.047043, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[219.047236, "o", "    endTime = clock(); //koniec pomiaru czasu dostepu do losowego (caly czas tego samego) elementu 10000 razy\r\n:\u001b[K"]
[219.366917, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[219.367129, "o", "\r\n:\u001b[K"]
[219.866899, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[219.867092, "o", "    executionTime = (double) (endTime - beginTime) / (CLOCKS_PER_SEC * rozmiar);\r\n:\u001b[K"]
[219.896796, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[219.896936, "o", "    printf (\"Sprawdzanie danego elementu %d 10000 razy trwa srednio na raz: %2.15f \\n\", index, executionTime);\r\n:\u001b[K"]
[219.927166, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[219.959725, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[219.959975, "o", "\r\n:\u001b[K"]
[219.988488, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[219.988695, "o", "    int* random_index = malloc (rozmiar * sizeof(int));\r\n:\u001b[K"]
[220.018697, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[220.049257, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.049453, "o", "    beginTime = clock();\r\n:\u001b[K"]
[220.080039, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.080281, "o", "    for(int i = 0; i < rozmiar; i++){\r\n:\u001b[K"]
[220.111852, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.112047, "o", "        find(czasy, random_index[i]);\r\n:\u001b[K"]
[220.141976, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.142131, "o", "    }\r\n:\u001b[K"]
[220.1735, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    endTime = clock();\r\n:\u001b[K"]
[220.203671, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[220.233588, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.233754, "o", "    executionTime = (double) (endTime - beginTime) / (CLOCKS_PER_SEC * rozmiar);\r\n:\u001b[K"]
[220.2642, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.264394, "o", "    printf(\"Sprawdzanie dostepu do losowych elementow trwa srednio        : %2.15f \\n\", executionTime);\r\n:\u001b[K"]
[220.297234, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.297666, "o", "\r\n:\u001b[K"]
[220.327693, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.327919, "o", "    free(random_index);\r\n:\u001b[K"]
[220.361403, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.361592, "o", "\r\n:\u001b[K"]
[220.606846, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[220.607023, "o", "    free(czasy);\r\n:\u001b[K"]
[221.106738, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K    \r\n:\u001b[K"]
[221.136782, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.13697, "o", "    return 0;\r\n:\u001b[K"]
[221.166812, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.167058, "o", "}\r\n:\u001b[K"]
[221.198663, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.198829, "o", "\r\n:\u001b[K"]
[221.227761, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.228023, "o", "\r\n:\u001b[K"]
[221.25796, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[221.287836, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.288052, "o", "\r\n:\u001b[K"]
[221.318643, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.318799, "o", "\r\n:\u001b[K"]
[221.349206, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\r\n:\u001b[K"]
[221.379261, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.379319, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.409781, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.410025, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.440136, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.440326, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.471136, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.502073, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.531654, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.561617, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.591655, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.591801, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.621916, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.652473, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K"]
[221.652685, "o", "\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.683281, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.714053, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.74441, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.774646, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[221.80505, "o", "\r\u001b[K \u001b[KESC\b\b\bESC\u001b[KO\bO\u001b[KB\bB\r\u001b[K\u0007\r\u001b[K\u001b[7m(END)\u001b[27m\u001b[K"]
[222.943057, "o", "\r\u001b[K\u001b[?1l\u001b>\u001b[?1049l\u001b[23;0;0t"]
[222.943713, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[225.515974, "o", "cat exercise3.c | less"]
[225.740921, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\bgcc exercise3.c -o ex3"]
[226.188225, "o", "\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b./ex2\u001b[K"]
[227.592892, "o", "\b\u001b[K"]
[227.852257, "o", "3"]
[228.707856, "o", "\r\n"]
[228.709347, "o", "dupa1\r\ndupa2\r\ndupa3\r\n(Head) 8 -> 8 (Head)\r\ndupa4\r\n"]
[228.70957, "o", "dupa5\r\n(Head) 8 -> 17 -> 8 (Head)\r\ndupa6\r\ndupa7\r\n(Head) 8 -> 17 -> 19 -> 8 (Head)\r\ndupa8\r\n1\r\ndupa9\r\n8\r\ndupa10\r\ndupa11\r\n(Head) 17 -> 17 (Head)\r\ndupa12\r\ndupa13\r\ndupa14\r\ndupa15\r\ndupa16\r\ndupa17\r\n(Head) 17 -> 22 -> 55 -> 89 -> 17 (Head)\r\ndupa18\r\n"]
[228.722989, "o", "Sprawdzanie danego elementu 797 10000 razy trwa srednio na raz: 0.000001312900000 \r\n"]
[228.723283, "o", "Sprawdzanie dostepu do losowych elementow trwa srednio        : 0.000000009200000 \r\n"]
[228.72355, "o", "\u001b]0;aleksander@CzadowyOlo: ~/aisd/261702/lab1\u0007\u001b[01;32maleksander@CzadowyOlo\u001b[00m:\u001b[01;34m~/aisd/261702/lab1\u001b[00m$ "]
[234.598351, "o", "e"]
[235.016807, "o", "x"]
[235.384591, "o", "i"]
[235.718193, "o", "t"]
[236.569319, "o", "\r\n"]
[236.569502, "o", "exit\r\n"]
